/*
 * Copyright (c) 2020-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <../boards/shields/kyria/boards/nice_nano.overlay>

#define DEFAULT 0
#define NAVI    1
#define SYMBOLS 2
#define NUMPAD  3
#define CONFIG  4

/ {
	conditional_layers {
		compatible = "zmk,conditional-layers";
		tri_layer {
			if-layers = <NAVI SYMBOLS>;
			then-layer = <CONFIG>;
		};
	};
	
	behaviors {
		ateu: at_euro {
			compatible = "zmk,behavior-mod-morph";
			label = "AT_EURO";
			#binding-cells = <0>;
			bindings = <&kp RA(N2)>, <&kp RA(E)>;
			mods = <(MOD_LSFT)>;
		};

		emqm: exclamation_mark_question_mark {
			compatible = "zmk,behavior-mod-morph";
			label = "EM_QM";
			#binding-cells = <0>;
			bindings = <&kp LS(N1)>, <&kp LS(MINUS)>;
			mods = <(MOD_LSFT)>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   Ç  |
// |   º   |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   Ñ   |   ´  |
// |   ¿   |  Z  |  X  |  C   |  V   |  B   | DEL LSF |   ALT   |  |   TAB   | L SHIFT |  N   |  M    |  ,    |  .   |   /   |   ?  |
//                     |  @   | NUMP | NAV  |  BSPC   |   CTRL  |  |  ENTER  |  SPACE  | SYM  | GUI   |  ≡    |
			bindings = <
	&kp ESC   &kp Q &kp W &kp E       &kp R    &kp T                                                       &kp Y    &kp U       &kp I     &kp O   &kp P    &kp NON_US_HASH
	&kp GRAVE &kp A &kp S &kp D       &kp F    &kp G                                                       &kp H    &kp J       &kp K     &kp L   &kp SEMI &kp SQT
	&kp EQUAL &kp Z &kp X &kp C       &kp V    &kp B    &mt LSHFT DEL  &kp LALT   &kp TAB   &mt LSHFT CAPS &kp N    &kp M       &kp COMMA &kp DOT &kp FSLH &emqm
					&ateu &tog NUMPAD &mo NAVI &kp BSPC &kp LCTRL      &kp RET    &kp SPACE &mo SYMBOLS    &kp LGUI &kp K_CMENU
			>;
		};

		navigation_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |     | CtZ | Ct+V | Ct+C | Ct+X |                                          | PaUp | Home  |  Up   | End  | C+Hom |      |
// |       | GUI | ALT | CTRL | LSFT |      |                                          | PaDn | Left  | Down  |Right | C+End |      |
// |       |     |     |      |      |      |         |         |  |         |         |      |       |       |      |       |      |
//                     |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&trans &none    &kp LC(Z) &kp LC(V) &kp LC(C) &kp LC(X)                               &kp PG_UP &kp HOME &kp UP   &kp END   &kp LC(HOME) &none
	&none  &kp LGUI &kp LALT  &kp LCTRL &kp LSHFT &none                                   &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp LC(END)  &none
	&none  &none    &none     &none     &none     &none     &trans &trans   &trans &trans &none     &none    &none    &none     &none        &none
							  &trans    &trans    &trans    &trans &trans   &trans &trans &trans    &trans   &trans
			>;
		};

		symbols_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |  |  |  &  |   {  |  }   |  "   |                                          |  $   |   [   |   ]   |  %   |   @   |      |
// |   -   |  *  |  +  |   (  |  )   |  =   |                                          |  ;   |   <   |   >   |  /   |   \   |      |
// |       |     |     |   ~  |  `   |  '   |         |         |  |         |         |  #   |   ^   |   €   |      |       |      |
//                     |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&trans    &kp RA(N1)   &kp LS(N6) &kp RA(SQT) &kp RA(NON_US_HASH) &kp LS(N2)                               &kp LS(N4)    &kp RA(LBKT)    &kp RA(RBKT)        &kp LS(N5) &kp RA(N2)    &none
	&kp SLASH &kp LS(RBKT) &kp RBKT   &kp LS(N8)  &kp LS(N9)          &kp LS(N0)                               &kp LS(COMMA) &kp NON_US_BSLH &kp LS(NON_US_BSLH) &kp LS(N7) &kp RA(GRAVE) &none
	&none     &none        &none      &kp RA(N4)  &kp LBKT            &kp MINUS  &trans &trans   &trans &trans &kp RA(N3)    &kp LS(LBKT)    &kp RA(E)           &none      &none         &none
									  &trans      &trans              &trans     &trans &trans   &trans &trans &trans &trans &trans
			>;
		};

		numpad_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       | F6  | F1  |  F12 |  F3  |      |                                          |  .   |   4   |   5   |  6   | BSPC  |  €   |
// |       | F11 | F4  |  F2  |  F5  |      |                                          |  0   |   1   |   2   |  3   |   +   |  -   |
// |       | F7  | F8  |  F9  |  F10 |      |         |         |  |         |         |  ,   |   7   |   8   |  9   |   *   |  /   |
//                     |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&trans &kp F6  &kp F1 &kp F12 &kp F3  &none                                     &kp DOT   &kp N4 &kp N5 &kp N6 &kp BSPC        &kp RA(E)
	&none  &kp F11 &kp F4 &kp F2  &kp F5  &none                                     &kp N0    &kp N1 &kp N2 &kp N3 &kp KP_PLUS     &kp KP_MINUS
	&none  &kp F7  &kp F8 &kp F9  &kp F10 &none  &trans &trans        &trans &trans &kp COMMA &kp N7 &kp N8 &kp N9 &kp KP_ASTERISK &kp KP_SLASH
						  &trans  &trans  &trans &trans &trans        &trans &trans &trans    &trans &trans
			>;
		};

		configuration_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  SAI  | BRI | HUI | NMOD |BT_PRV|OUTUSB|                                          |OUTUSB| BT_PRV|  NMOD | HUI  |  BRI  | SAI  |
// |  SAD  | BRD | HUD | ETOG |BT_NXT|OUT_BL|                                          |OUT_BL| BT_NXT|  ETOG | HUD  |  BRD  | SAD  |
// |       |     |     | PMOD |BT_CLR|OUT_TG|         |         |  |         |         |OUT_TG| BT_CLR|  PMOD |      |       |      |
//                     |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_HUI &rgb_ug RGB_EFF   &bt BT_PRV &out OUT_TOG                               &out OUT_TOG &bt BT_PRV &rgb_ug RGB_EFF   &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_SAI
	&rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_HUD &ext_power EP_TOG &bt BT_NXT &out OUT_BLE                               &out OUT_BLE &bt BT_NXT &ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_SAD
	&none           &none           &none           &rgb_ug RGB_EFR   &bt BT_CLR &out OUT_USB &trans &trans   &trans &trans &out OUT_USB &bt BT_CLR &rgb_ug RGB_EFR   &none           &none           &none
													&trans            &trans     &trans       &trans &trans   &trans &trans &trans       &trans     &trans
			>;
		};
	};
};
